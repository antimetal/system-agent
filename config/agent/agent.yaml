apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: antimetal
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: agent
    app.kubernetes.io/created-by: antimetal
    app.kubernetes.io/part-of: antimetal
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  namespace: system
  labels:
    control-plane: antimetal
    app.kubernetes.io/name: agent
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: agent
    app.kubernetes.io/created-by: antimetal
    app.kubernetes.io/part-of: antimetal
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: antimetal
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: agent
      labels:
        control-plane: antimetal
        app.kubernetes.io/name: agent
        app.kubernetes.io/instance: system
        app.kubernetes.io/component: agent
        app.kubernetes.io/created-by: antimetal
        app.kubernetes.io/part-of: antimetal
        app.kubernetes.io/managed-by: kustomize
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
      containers:
      - name: agent
        command:
        - /agent
        args:
        - --leader-elect
        image: amagent
        env:
        - name: KUBERNETES_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_MOUNT_PREFIX
          value: "/host"
        - name: HOST_PROC
          value: "/host/proc"
        - name: HOST_SYS
          value: "/host/sys"
        - name: HOST_DEV
          value: "/host/dev"
        - name: HOST_VAR
          value: "/host/var"
        - name: HOST_RUN
          value: "/host/run"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: host-proc
          mountPath: /host/proc
          readOnly: true
        - name: host-sys
          mountPath: /host/sys
          readOnly: true
        - name: host-dev
          mountPath: /host/dev
          readOnly: true
        - name: host-var
          mountPath: host/var
          readOnly: true
        - name: host-run
          mountPath: /host/run
          readOnly: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: agent
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: true
      volumes:
      - name: host-proc
        hostPath:
          path: /proc
      - name: host-sys
        hostPath:
          path: /sys
      - name: host-dev
        hostPath:
          path: /dev
      - name: host-var
        hostPath:
          path: /var
      - name: host-run
        hostPath:
          path: /run
